<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.epay.dal.dao.mapper.AccountBookMapper">

  <resultMap id="BaseResultMap" type="org.epay.dal.dao.model.AccountBook">
    <id column="account_book_id" jdbcType="VARCHAR" property="account_book_id" />
    <result column="mch_id" jdbcType="VARCHAR" property="mch_id" />
    <result column="items_id" jdbcType="VARCHAR" property="items_id" />
    <result column="user_id" jdbcType="VARCHAR" property="user_id" />
    <result column="user_name" jdbcType="VARCHAR" property="user_name" />
    <result column="currency" jdbcType="VARCHAR" property="currency" />
    <result column="items_money" jdbcType="BIGINT" property="items_money" />
    <result column="pay_time" jdbcType="VARCHAR" property="pay_time" />
    <result column="pay_status" jdbcType="TINYINT" property="pay_status" />
    <result column="check_status" jdbcType="TINYINT" property="check_status" />
    <result column="settle_status" jdbcType="TINYINT" property="settle_status" />
    <result column="pay_channel" jdbcType="VARCHAR" property="pay_channel" />
    <result column="channel_settle_cost" jdbcType="INTEGER" property="channel_settle_cost" />
    <result column="channel_settle_money" jdbcType="BIGINT" property="channel_settle_money" />
    <result column="reserve1" jdbcType="VARCHAR" property="reserve1" />
    <result column="reserve2" jdbcType="VARCHAR" property="reserve2" />
    <result column="reserve3" jdbcType="VARCHAR" property="reserve3" />
    <result column="reserve4" jdbcType="VARCHAR" property="reserve4" />
    <result column="reserve5" jdbcType="VARCHAR" property="reserve5" />
  </resultMap>

  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>

  <sql id="Base_Column_List">
    account_book_id, mch_id, items_id, user_id, user_name, currency, items_money, pay_time, 
    pay_status, check_status, settle_status, pay_channel, channel_settle_cost, channel_settle_money, 
    reserve1, reserve2, reserve3, reserve4, reserve5
  </sql>

  <select id="selectByExample" parameterType="org.epay.dal.dao.model.AccountBookExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from epay_account_book
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>

  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from epay_account_book
    where account_book_id = #{account_book_id,jdbcType=VARCHAR}
  </select>

  <select id="selectAccountBookByMchIdAndItemsId" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from epay_account_book
    where mch_id = #{mch_id} and items_id = #{items_id}
  </select>


  <!--分页查询accountBook+payOrder总数-->
  <select id="selectTotalCountAccountBookAndPayOrderByCondition" resultType="java.lang.Integer">
    select
    count(*)
    from epay_pay_order p
    left join epay_account_book a
    on p.mch_id=a.mch_id
    and p.mch_order_no=a.account_book_id
    and p.user_id=a.user_id
    and p.user_name=a.user_name
    <where>
      a.mch_id = #{mch_id}
      <if test="items_id != null and items_id != ''">
        and a.items_id = #{items_id}
      </if>
      <if test="user_id != null and user_id != ''">
        and a.user_id = #{user_id}
      </if>
      <if test="user_name != null and user_name != ''">
        and a.user_name = #{user_name}
      </if>
      <if test="pay_time != null and pay_time != ''">
        and a.pay_time = #{pay_time}
      </if>
      <if test="pay_status != null and pay_status != ''">
        and a.pay_status = ${pay_status} - 1
      </if>
      <if test="settle_status != null and settle_status != ''">
        and a.settle_status = ${settle_status} - 1
      </if>
      <if test="pay_channel != null and pay_channel != ''">
        and a.pay_channel = #{pay_channel}
      </if>
      <if test="mch_order_no != null and mch_order_no != ''">
        and p.mch_order_no = #{mch_order_no}
      </if>
      <if test="user_channel_account != null and user_channel_account != ''">
        and p.user_channel_account = #{user_channel_account}
      </if>
      <if test="channel_mch_id != null and channel_mch_id != ''">
        and p.channel_mch_id = #{channel_mch_id}
      </if>
      <if test="channel_order_no != null and channel_order_no != ''">
        and p.channel_order_no = #{channel_order_no}
      </if>
      <if test="res_code != null and res_code != ''">
        and p.res_code = #{res_code}
      </if>
      <if test="expire_time != null and expire_time != ''">
        and p.expire_time = #{expire_time}
      </if>
    </where>
  </select>

  <!--分页查询accountBook+payOrder-->
  <select id="selectPageAccountBookAndPayOrderByCondition" resultMap="BaseResultMap">
    select a.account_book_id,
    a.items_id,
    a.user_id,
    a.user_name,
    a.pay_time,
    a.pay_status,
    a.settle_status,
    a.pay_channel,
    p.mch_order_no,
    p.user_channel_account,
    p.channel_mch_id,
    p.channel_order_no,
    p.res_code,
    p.expire_time
    from epay_pay_order p
    left join epay_account_book a
    on p.mch_id=a.mch_id
    and p.mch_order_no=a.account_book_id
    and p.user_id=a.user_id
    and p.user_name=a.user_name
    <where>
      a.mch_id = #{mch_id}
      <if test="items_id != null and items_id != ''">
        and a.items_id = #{items_id}
      </if>
      <if test="user_id != null and user_id != ''">
        and a.user_id = #{user_id}
      </if>
      <if test="user_name != null and user_name != ''">
        and a.user_name = #{user_name}
      </if>
      <if test="pay_time != null and pay_time != ''">
        and a.pay_time = #{pay_time}
      </if>
      <if test="pay_status != null and pay_status != ''">
        and a.pay_status = #{pay_status} - 1
      </if>
      <if test="settle_status != null and settle_status != ''">
        and a.settle_status = #{settle_status} - 1
      </if>
      <if test="pay_channel != null and pay_channel != ''">
        and a.pay_channel = #{pay_channel}
      </if>
      <if test="mch_order_no != null and mch_order_no != ''">
        and p.mch_order_no = #{mch_order_no}
      </if>
      <if test="user_channel_account != null and user_channel_account != ''">
        and p.user_channel_account = #{user_channel_account}
      </if>
      <if test="channel_mch_id != null and channel_mch_id != ''">
        and p.channel_mch_id = #{channel_mch_id}
      </if>
      <if test="channel_order_no != null and channel_order_no != ''">
        and p.channel_order_no = #{channel_order_no}
      </if>
      <if test="res_code != null and res_code != ''">
        and p.res_code = #{res_code}
      </if>
      <if test="expire_time != null and expire_time != ''">
        and p.expire_time = #{expire_time}
      </if>
    </where>
    order by p.mch_order_no asc
    limit #{startIndex}, #{pageSize}
  </select>

  <!--根据accountBook的ids查询联合查询accountBook+payOrder-->
  <select id="selectAccountBookAndPayOrderByAccountBookIds" resultMap="BaseResultMap">
    select a.account_book_id,
    a.items_id,
    a.user_id,
    a.user_name,
    a.pay_time,
    a.pay_status,
    a.settle_status,
    a.pay_channel,
    p.mch_order_no,
    p.user_channel_account,
    p.channel_mch_id,
    p.channel_order_no,
    p.res_code,
    p.expire_time
    from epay_account_book a
    left join epay_pay_order p
    on p.mch_order_no=a.account_book_id
    where a.account_book_id in
    <foreach collection="list" item="item" index="index" open="(" separator="," close=")">
      #{item}
    </foreach>
  </select>

  <select id="selectByMchIdAndItemsIdAndUserId" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from epay_account_book
    where mch_id = #{mch_id} and items_id = #{items_id} and user_id = #{user_id}
  </select>

  <!--查询accountBook总金额-->
  <select id="selectAllMoney" resultType="java.lang.Integer">
    select
    sum(items_money)
    from epay_account_book
    <where>
      mch_id = #{mch_id} and items_id = #{items_id}
    </where>
  </select>

  <!--查询accountBook已缴费金额-->
  <select id="selectReadMoney" resultType="java.lang.Integer">
    select
    IFNULL(sum(items_money), 0)
    from epay_account_book
    <where>
      mch_id = #{mch_id} and items_id = #{items_id} and pay_status = 1
    </where>
  </select>

  <!--查询当前商户的所有结算总数-->
  <select id="selectPageCountByMchIdAndItemsId" resultType="java.lang.Integer">
    select
    count(*)
    from epay_account_book
    <where>
      mch_id = #{mch_id} and pay_status = 1
      <if test="items_id != null and items_id != ''">
        and items_id = #{items_id}
      </if>
    </where>
  </select>

  <!--查询当前商户的所有结算数据-->
  <select id="selectPageByMchIdAndItemsId" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from epay_account_book
    <where>
      mch_id = #{mch_id} and pay_status = 1
      <if test="items_id != null and items_id != ''">
        and items_id = #{items_id}
      </if>
    </where>
    order by pay_time desc
    limit #{startIndex}, #{pageSize}
  </select>

  <!--根据ids查询-->
  <select id="selectByPrimaryKeys" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from epay_account_book
    where account_book_id in
    <foreach collection="list" item="item" index="index" open="(" separator="," close=")">
      #{item}
    </foreach>
  </select>

  <!--根据accountFile的商户号+项目编号查询accountBook-->
  <select id="selectByMchIdAndItemsId" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from epay_account_book
    where mch_id = #{mch_id} and items_id = #{items_id}
  </select>

  <!--根据商户号 + 项目编号 + 支付状态 查询-->
  <select id="selectByMchIdAndItemsIdAndPayStatus" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from epay_account_book
    where mch_id = #{mch_id} and items_id = #{items_id} and pay_status = 1
  </select>

  <!--根据商户号与项目编号查询总记录条数-->
  <select id="selectCountByMchIdAndItemsId" resultType="java.lang.Integer">
    select count(*)
    from epay_account_book
    <where>
      mch_id = #{mch_id} and items_id = #{items_id}
    </where>
  </select>

  <!--根据商户号与项目编号+状态查询总记录条数-->
  <select id="selectCountByMchIdAndItemsIdAndStatus" resultType="java.lang.Integer">
    select
    count(*)
    from epay_account_book
    <where>
      mch_id = #{mch_id} and items_id = #{items_id}
      <if test="status != null and status != ''">
        and pay_status = #{status}
      </if>
      <if test="user_id != null and user_id != ''">
        and user_id = #{user_id}
      </if>
      <if test="user_name != null and user_name != ''">
        and user_name = #{user_name}
      </if>
    </where>
  </select>

  <!--根据商户号获取所有的AccountBook-->
  <select id="getAllAccountBookByMchId" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from epay_account_book
    where mch_id = #{mch_id}
  </select>

  <!--根据（项目编号s + 商户号）查询accountBook-->
  <select id="selectAccountBookByItemsIdAndMchId" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from epay_account_book
    <where>
      mch_id = #{mch_id}
      <if test="status != null and status != ''">
        and pay_status = #{status}
      </if>
      <if test="user_id != null and user_id != ''">
        and user_id = #{user_id}
      </if>
      <if test="user_name != null and user_name != ''">
        and user_name = #{user_name}
      </if>
      and items_id in
      <foreach collection="itemslist" item="item" index="index" open="(" separator="," close=")">
        #{item}
      </foreach>
    </where>
    order by items_id asc
    limit #{startIndex}, #{pageSize}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from epay_account_book
    where account_book_id = #{account_book_id,jdbcType=VARCHAR}
  </delete>

  <!--根据商户号与项目编号删除数据-->
  <delete id="deleteByMchIdAndItemsId">
    delete from epay_account_book
    where mch_id = #{mch_id} and items_id = #{items_id}
  </delete>

  <delete id="deleteByExample" parameterType="org.epay.dal.dao.model.AccountBookExample">
    delete from epay_account_book
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.epay.dal.dao.model.AccountBook">
    insert into epay_account_book (account_book_id, mch_id, items_id, 
      user_id, user_name, currency, 
      items_money, pay_time, pay_status, 
      check_status, settle_status, pay_channel, 
      channel_settle_cost, channel_settle_money, 
      reserve1, reserve2, reserve3, 
      reserve4, reserve5)
    values (#{account_book_id,jdbcType=VARCHAR}, #{mch_id,jdbcType=VARCHAR}, #{items_id,jdbcType=VARCHAR}, 
      #{user_id,jdbcType=VARCHAR}, #{user_name,jdbcType=VARCHAR}, #{currency,jdbcType=VARCHAR}, 
      #{items_money,jdbcType=BIGINT}, #{pay_time,jdbcType=VARCHAR}, #{pay_status,jdbcType=TINYINT}, 
      #{check_status,jdbcType=TINYINT}, #{settle_status,jdbcType=TINYINT}, #{pay_channel,jdbcType=VARCHAR}, 
      #{channel_settle_cost,jdbcType=INTEGER}, #{channel_settle_money,jdbcType=BIGINT}, 
      #{reserve1,jdbcType=VARCHAR}, #{reserve2,jdbcType=VARCHAR}, #{reserve3,jdbcType=VARCHAR}, 
      #{reserve4,jdbcType=VARCHAR}, #{reserve5,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="org.epay.dal.dao.model.AccountBook">
    insert into epay_account_book
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="account_book_id != null">
        account_book_id,
      </if>
      <if test="mch_id != null">
        mch_id,
      </if>
      <if test="items_id != null">
        items_id,
      </if>
      <if test="user_id != null">
        user_id,
      </if>
      <if test="user_name != null">
        user_name,
      </if>
      <if test="currency != null">
        currency,
      </if>
      <if test="items_money != null">
        items_money,
      </if>
      <if test="pay_time != null">
        pay_time,
      </if>
      <if test="pay_status != null">
        pay_status,
      </if>
      <if test="check_status != null">
        check_status,
      </if>
      <if test="settle_status != null">
        settle_status,
      </if>
      <if test="pay_channel != null">
        pay_channel,
      </if>
      <if test="channel_settle_cost != null">
        channel_settle_cost,
      </if>
      <if test="channel_settle_money != null">
        channel_settle_money,
      </if>
      <if test="reserve1 != null">
        reserve1,
      </if>
      <if test="reserve2 != null">
        reserve2,
      </if>
      <if test="reserve3 != null">
        reserve3,
      </if>
      <if test="reserve4 != null">
        reserve4,
      </if>
      <if test="reserve5 != null">
        reserve5,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="account_book_id != null">
        #{account_book_id,jdbcType=VARCHAR},
      </if>
      <if test="mch_id != null">
        #{mch_id,jdbcType=VARCHAR},
      </if>
      <if test="items_id != null">
        #{items_id,jdbcType=VARCHAR},
      </if>
      <if test="user_id != null">
        #{user_id,jdbcType=VARCHAR},
      </if>
      <if test="user_name != null">
        #{user_name,jdbcType=VARCHAR},
      </if>
      <if test="currency != null">
        #{currency,jdbcType=VARCHAR},
      </if>
      <if test="items_money != null">
        #{items_money,jdbcType=BIGINT},
      </if>
      <if test="pay_time != null">
        #{pay_time,jdbcType=VARCHAR},
      </if>
      <if test="pay_status != null">
        #{pay_status,jdbcType=TINYINT},
      </if>
      <if test="check_status != null">
        #{check_status,jdbcType=TINYINT},
      </if>
      <if test="settle_status != null">
        #{settle_status,jdbcType=TINYINT},
      </if>
      <if test="pay_channel != null">
        #{pay_channel,jdbcType=VARCHAR},
      </if>
      <if test="channel_settle_cost != null">
        #{channel_settle_cost,jdbcType=INTEGER},
      </if>
      <if test="channel_settle_money != null">
        #{channel_settle_money,jdbcType=BIGINT},
      </if>
      <if test="reserve1 != null">
        #{reserve1,jdbcType=VARCHAR},
      </if>
      <if test="reserve2 != null">
        #{reserve2,jdbcType=VARCHAR},
      </if>
      <if test="reserve3 != null">
        #{reserve3,jdbcType=VARCHAR},
      </if>
      <if test="reserve4 != null">
        #{reserve4,jdbcType=VARCHAR},
      </if>
      <if test="reserve5 != null">
        #{reserve5,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.epay.dal.dao.model.AccountBookExample" resultType="java.lang.Long">
    select count(*) from epay_account_book
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update epay_account_book
    <set>
      <if test="record.account_book_id != null">
        account_book_id = #{record.account_book_id,jdbcType=VARCHAR},
      </if>
      <if test="record.mch_id != null">
        mch_id = #{record.mch_id,jdbcType=VARCHAR},
      </if>
      <if test="record.items_id != null">
        items_id = #{record.items_id,jdbcType=VARCHAR},
      </if>
      <if test="record.user_id != null">
        user_id = #{record.user_id,jdbcType=VARCHAR},
      </if>
      <if test="record.user_name != null">
        user_name = #{record.user_name,jdbcType=VARCHAR},
      </if>
      <if test="record.currency != null">
        currency = #{record.currency,jdbcType=VARCHAR},
      </if>
      <if test="record.items_money != null">
        items_money = #{record.items_money,jdbcType=BIGINT},
      </if>
      <if test="record.pay_time != null">
        pay_time = #{record.pay_time,jdbcType=VARCHAR},
      </if>
      <if test="record.pay_status != null">
        pay_status = #{record.pay_status,jdbcType=TINYINT},
      </if>
      <if test="record.check_status != null">
        check_status = #{record.check_status,jdbcType=TINYINT},
      </if>
      <if test="record.settle_status != null">
        settle_status = #{record.settle_status,jdbcType=TINYINT},
      </if>
      <if test="record.pay_channel != null">
        pay_channel = #{record.pay_channel,jdbcType=VARCHAR},
      </if>
      <if test="record.channel_settle_cost != null">
        channel_settle_cost = #{record.channel_settle_cost,jdbcType=INTEGER},
      </if>
      <if test="record.channel_settle_money != null">
        channel_settle_money = #{record.channel_settle_money,jdbcType=BIGINT},
      </if>
      <if test="record.reserve1 != null">
        reserve1 = #{record.reserve1,jdbcType=VARCHAR},
      </if>
      <if test="record.reserve2 != null">
        reserve2 = #{record.reserve2,jdbcType=VARCHAR},
      </if>
      <if test="record.reserve3 != null">
        reserve3 = #{record.reserve3,jdbcType=VARCHAR},
      </if>
      <if test="record.reserve4 != null">
        reserve4 = #{record.reserve4,jdbcType=VARCHAR},
      </if>
      <if test="record.reserve5 != null">
        reserve5 = #{record.reserve5,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update epay_account_book
    set account_book_id = #{record.account_book_id,jdbcType=VARCHAR},
      mch_id = #{record.mch_id,jdbcType=VARCHAR},
      items_id = #{record.items_id,jdbcType=VARCHAR},
      user_id = #{record.user_id,jdbcType=VARCHAR},
      user_name = #{record.user_name,jdbcType=VARCHAR},
      currency = #{record.currency,jdbcType=VARCHAR},
      items_money = #{record.items_money,jdbcType=BIGINT},
      pay_time = #{record.pay_time,jdbcType=VARCHAR},
      pay_status = #{record.pay_status,jdbcType=TINYINT},
      check_status = #{record.check_status,jdbcType=TINYINT},
      settle_status = #{record.settle_status,jdbcType=TINYINT},
      pay_channel = #{record.pay_channel,jdbcType=VARCHAR},
      channel_settle_cost = #{record.channel_settle_cost,jdbcType=INTEGER},
      channel_settle_money = #{record.channel_settle_money,jdbcType=BIGINT},
      reserve1 = #{record.reserve1,jdbcType=VARCHAR},
      reserve2 = #{record.reserve2,jdbcType=VARCHAR},
      reserve3 = #{record.reserve3,jdbcType=VARCHAR},
      reserve4 = #{record.reserve4,jdbcType=VARCHAR},
      reserve5 = #{record.reserve5,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.epay.dal.dao.model.AccountBook">
    update epay_account_book
    <set>
      <if test="mch_id != null">
        mch_id = #{mch_id,jdbcType=VARCHAR},
      </if>
      <if test="items_id != null">
        items_id = #{items_id,jdbcType=VARCHAR},
      </if>
      <if test="user_id != null">
        user_id = #{user_id,jdbcType=VARCHAR},
      </if>
      <if test="user_name != null">
        user_name = #{user_name,jdbcType=VARCHAR},
      </if>
      <if test="currency != null">
        currency = #{currency,jdbcType=VARCHAR},
      </if>
      <if test="items_money != null">
        items_money = #{items_money,jdbcType=BIGINT},
      </if>
      <if test="pay_time != null">
        pay_time = #{pay_time,jdbcType=VARCHAR},
      </if>
      <if test="pay_status != null">
        pay_status = #{pay_status,jdbcType=TINYINT},
      </if>
      <if test="check_status != null">
        check_status = #{check_status,jdbcType=TINYINT},
      </if>
      <if test="settle_status != null">
        settle_status = #{settle_status,jdbcType=TINYINT},
      </if>
      <if test="pay_channel != null">
        pay_channel = #{pay_channel,jdbcType=VARCHAR},
      </if>
      <if test="channel_settle_cost != null">
        channel_settle_cost = #{channel_settle_cost,jdbcType=INTEGER},
      </if>
      <if test="channel_settle_money != null">
        channel_settle_money = #{channel_settle_money,jdbcType=BIGINT},
      </if>
      <if test="reserve1 != null">
        reserve1 = #{reserve1,jdbcType=VARCHAR},
      </if>
      <if test="reserve2 != null">
        reserve2 = #{reserve2,jdbcType=VARCHAR},
      </if>
      <if test="reserve3 != null">
        reserve3 = #{reserve3,jdbcType=VARCHAR},
      </if>
      <if test="reserve4 != null">
        reserve4 = #{reserve4,jdbcType=VARCHAR},
      </if>
      <if test="reserve5 != null">
        reserve5 = #{reserve5,jdbcType=VARCHAR},
      </if>
    </set>
    where account_book_id = #{account_book_id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.epay.dal.dao.model.AccountBook">
    update epay_account_book
    set mch_id = #{mch_id,jdbcType=VARCHAR},
      items_id = #{items_id,jdbcType=VARCHAR},
      user_id = #{user_id,jdbcType=VARCHAR},
      user_name = #{user_name,jdbcType=VARCHAR},
      currency = #{currency,jdbcType=VARCHAR},
      items_money = #{items_money,jdbcType=BIGINT},
      pay_time = #{pay_time,jdbcType=VARCHAR},
      pay_status = #{pay_status,jdbcType=TINYINT},
      check_status = #{check_status,jdbcType=TINYINT},
      settle_status = #{settle_status,jdbcType=TINYINT},
      pay_channel = #{pay_channel,jdbcType=VARCHAR},
      channel_settle_cost = #{channel_settle_cost,jdbcType=INTEGER},
      channel_settle_money = #{channel_settle_money,jdbcType=BIGINT},
      reserve1 = #{reserve1,jdbcType=VARCHAR},
      reserve2 = #{reserve2,jdbcType=VARCHAR},
      reserve3 = #{reserve3,jdbcType=VARCHAR},
      reserve4 = #{reserve4,jdbcType=VARCHAR},
      reserve5 = #{reserve5,jdbcType=VARCHAR}
    where account_book_id = #{account_book_id,jdbcType=VARCHAR}
  </update>
</mapper>